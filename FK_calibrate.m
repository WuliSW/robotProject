function [Td] = FK_calibrate(q)
%以下程序是基于局部POE的采用位姿测量的误差模型，目的在于提高机器人的绝对精度
%注： 以下标定只用了1组坐标，实际至少需要14组点，20组点最好。
%以下是正运动学指数积
%相对基坐标系的螺旋轴
w1 = [0;0;1]; %沿关节轴正向的单位向量 相对于基坐标系
w2 = [0;1;0];
w3 = [0;1;0];
w4 = [1;0;0];
w5 = [0;-1;0];
w6 = [0;0;1];

q1 = [0;0;0]; %qn是关节轴上任一点 坐标值在基坐标系中进行度量 为方便选择，q选为q1=T01 q2=T02 q3=T03 q4=T04 q5=T05 q6=T06的末端位置
q2 = [0.1573;-0.0653;0] ;
q3 = [0.1738;-0.1117;0.6136] ;
q4 = [0.4713;-0.0598;0.7807] ;
q5 = [0.8259;-0.1038;0.7370] ;
q6 = [0.8321;-0.1059;0.6469] ;

v1 = -cross(w1,q1); %线速度
v2 = -cross(w2,q2);
v3 = -cross(w3,q3);
v4 = -cross(w4,q4);
v5 = -cross(w5,q5);
v6 = -cross(w6,q6);

R1 = [0 -w1(3) w1(2);w1(3) 0 -w1(1);-w1(2) w1(1) 0]; %转轴的反对称矩阵
R2 = [0 -w2(3) w2(2);w2(3) 0 -w2(1);-w2(2) w2(1) 0];
R3 = [0 -w3(3) w3(2);w3(3) 0 -w3(1);-w3(2) w3(1) 0];
R4 = [0 -w4(3) w4(2);w4(3) 0 -w4(1);-w4(2) w4(1) 0];
R5 = [0 -w5(3) w5(2);w5(3) 0 -w5(1);-w5(2) w5(1) 0];
R6 = [0 -w6(3) w6(2);w6(3) 0 -w6(1);-w6(2) w6(1) 0];

G1 = eye(3)*q(1) + (1-cos(q(1)))*R1 + (q(1)-sin(q(1)))*R1^2;  
G2 = eye(3)*q(2) + (1-cos(q(2)))*R2 + (q(2)-sin(q(2)))*R2^2;
G3 = eye(3)*q(3) + (1-cos(q(3)))*R3 + (q(3)-sin(q(3)))*R3^2;
G4 = eye(3)*q(4) + (1-cos(q(4)))*R4 + (q(4)-sin(q(4)))*R4^2;
G5 = eye(3)*q(5) + (1-cos(q(5)))*R5 + (q(5)-sin(q(5)))*R5^2;
G6 = eye(3)*q(6) + (1-cos(q(6)))*R6 + (q(6)-sin(q(6)))*R6^2;

Rot1 = eye(3) + sin(q(1))*R1 + (1-cos(q(1)))*R1^2;  %刚体转动的矩阵指数
Rot2 = eye(3) + sin(q(2))*R2 + (1-cos(q(2)))*R2^2; 
Rot3 = eye(3) + sin(q(3))*R3 + (1-cos(q(3)))*R3^2;
Rot4 = eye(3) + sin(q(4))*R4 + (1-cos(q(4)))*R4^2; 
Rot5 = eye(3) + sin(q(5))*R5 + (1-cos(q(5)))*R5^2;
Rot6 = eye(3) + sin(q(6))*R6 + (1-cos(q(6)))*R6^2; 

eS1 = [Rot1 G1*v1 ;0 0 0 1];%刚体运动的矩阵指数4*4
eS2 = [Rot2 G2*v2 ;0 0 0 1];
eS3 = [Rot3 G3*v3 ;0 0 0 1];
eS4 = [Rot4 G4*v4 ;0 0 0 1];
eS5 = [Rot5 G5*v5 ;0 0 0 1];
eS6 = [Rot6 G6*v6 ;0 0 0 1];
%初始矩阵
T(:,:,1) = [1 0 0 0 ;0 1 0 0 ;0 0 1 0;0 0 0 1];
T(:,:,2) = [0.0000   -1.0000         0    0.1573; 0.0000    0.0000    1.0000   -0.0653; -1.0000   -0.0000    0.0000         0;0         0         0    1.0000];
T(:,:,3) = [1.0000         0         0   -0.6136;0    1.0000         0   -0.0165; 0         0    1.0000   -0.0464;0         0         0    1.0000];
T(:,:,4) = [1.0000         0         0   -0.1671;0    0.0000   -1.0000   -0.2975; 0    1.0000    0.0000    0.0519;  0         0         0    1.0000];
T(:,:,5) = [0.0000   -1.0000         0    0.0437;0.0000    0.0000   -1.0000   -0.0440;1.0000    0.0000    0.0000    0.3546; 0         0         0    1.0000];
T(:,:,6) = [1.0000         0         0    0.0062; 0    0.0000    1.0000   -0.0901;  0   -1.0000    0.0000    0.0021; 0         0         0    1.0000];
%末端执行器相对于第六关节法兰盘中心处的变换矩阵
T(:,:,7) = [1 0 0 -0.08824;
       0 1 0 0.01657;
       0 0 1 -0.42473;
       0 0 0 1];
for j = 1:1000
    j
%-----  实际位置  假如此时位姿为关节角[0.11;0.11;0.11;0.11;0.11;0.11]
    Pa = [0.9738  -0.1934   0.1198   0.9043;
          0.2053   0.9739  -0.0965   0.0083;
         -0.0980   0.1186   0.9881   0.4918;
          0        0        0        1]; 
    %理论位置 局部POE
    Pn = T(:,:,1)*T(:,:,2)*T(:,:,3)*T(:,:,4)*T(:,:,5)*T(:,:,6)*T(:,:,7)*eS1*eS2*eS3*eS4*eS5*eS6;
    % 关节角[0.1;0.1;0.1;0.1;0.1;0.1]的位姿Pn = 
%     0.9780   -0.1781    0.1083    0.8997
%     0.1880    0.9781   -0.0890   -0.0026
%    -0.0901    0.1074    0.9901    0.5061
%          0         0         0    1.0000 
    Vb_frame = logm(Pa*inv(Pn));   %Pa第六关节法兰盘中心的实际位置   Pn是第六关节法兰盘中心的名义位置
    v = Vb_frame(1:3,4);
    w_frame = Vb_frame(1:3,1:3);
    %速度旋量Vb 维度6*1 
    Vb = [w_frame(6);w_frame(7);w_frame(2);v];
    y = Vb;
    norm(y)
    if norm(y)<1e-8
        Td = T(:,:,1)*T(:,:,2)*T(:,:,3)*T(:,:,4)*T(:,:,5)*T(:,:,6)*T(:,:,7)*eS1*eS2*eS3*eS4*eS5*eS6;
        break
    else
    %求矩阵T01(0)的伴随矩阵
    T01 = T(:,:,1);
    p01 = T01(1:3,4);
    p01_frame = [0 -p01(3) p01(2);p01(3) 0 -p01(1);-p01(2) p01(1) 0];
    AdT01 = [T01(1:3,1:3) zeros(3,3);p01_frame*T01(1:3,1:3) T01(1:3,1:3)];
    
    %求矩阵T01*eS1的伴随矩阵
    T01_s1 = T01*eS1;
    p01_s1 = T01_s1(1:3,4);
    p01_frame_s1 = [0 -p01_s1(3) p01_s1(2);p01_s1(3) 0 -p01_s1(1);-p01_s1(2) p01_s1(1) 0];
    AdT01_s1 = [T01_s1(1:3,1:3) zeros(3,3);p01_frame_s1*T01_s1(1:3,1:3) T01_s1(1:3,1:3)];    
    
    %求矩阵T12(0)的伴随矩阵
    T12 = T(:,:,2);
    p12 = T12(1:3,4);
    p12_frame = [0 -p12(3) p12(2);p12(3) 0 -p12(1);-p12(2) p12(1) 0];
    AdT12 = [T12(1:3,1:3) zeros(3,3);p12_frame*T12(1:3,1:3) T12(1:3,1:3)];
    
    %求矩阵T01*eS1*T12*eS2的伴随矩阵
    T02 = T01*eS1*T12*eS2;
    p02 = T02(1:3,4);
    p02_frame = [0 -p02(3) p02(2);p02(3) 0 -p02(1);-p02(2) p02(1) 0];
    AdT02 = [T02(1:3,1:3) zeros(3,3);p02_frame*T02(1:3,1:3) T02(1:3,1:3)];
    
    %求矩阵T23(0)的伴随矩阵
    T23 = T(:,:,3);
    p23 = T23(1:3,4);
    p23_frame = [0 -p23(3) p23(2);p23(3) 0 -p23(1);-p23(2) p23(1) 0];
    AdT23 = [T23(1:3,1:3) zeros(3,3);p23_frame*T23(1:3,1:3) T23(1:3,1:3)];
    
    %求矩阵T01*eS1*T12*eS2*T23*eS3的伴随矩阵
    T03 = T01*eS1*T12*eS2*T23*eS3;
    p03 = T03(1:3,4);
    p03_frame = [0 -p03(3) p03(2);p03(3) 0 -p03(1);-p03(2) p03(1) 0];
    AdT03 = [T03(1:3,1:3) zeros(3,3);p03_frame*T03(1:3,1:3) T03(1:3,1:3)];
    
    %求矩阵T34(0)的伴随矩阵
    T34 = T(:,:,4);
    p34 = T34(1:3,4);
    p34_frame = [0 -p34(3) p34(2);p34(3) 0 -p34(1);-p34(2) p34(1) 0];
    AdT34 = [T34(1:3,1:3) zeros(3,3);p34_frame*T34(1:3,1:3) T34(1:3,1:3)];
    
    %求矩阵T01*eS1*T12*eS2*T23*eS3*T34*eS4的伴随矩阵
    T04 = T01*eS1*T12*eS2*T23*eS3*T34*eS4;
    p04 = T04(1:3,4);
    p04_frame = [0 -p04(3) p04(2);p04(3) 0 -p04(1);-p04(2) p04(1) 0];
    AdT04 = [T04(1:3,1:3) zeros(3,3);p04_frame*T04(1:3,1:3) T04(1:3,1:3)];
    
    %求矩阵T45(0)的伴随矩阵
    T45 = T(:,:,5);
    p45 = T45(1:3,4);
    p45_frame = [0 -p45(3) p45(2);p45(3) 0 -p45(1);-p45(2) p45(1) 0];
    AdT45 = [T45(1:3,1:3) zeros(3,3);p45_frame*T45(1:3,1:3) T45(1:3,1:3)];
    
    %求矩阵T01*eS1*T12*eS2*T23*eS3*T34*eS4*T45*eS5的伴随矩阵
    T05 = T01*eS1*T12*eS2*T23*eS3*T34*eS4*T45*eS5;
    p05 = T05(1:3,4);
    p05_frame = [0 -p05(3) p05(2);p05(3) 0 -p05(1);-p05(2) p05(1) 0];
    AdT05 = [T05(1:3,1:3) zeros(3,3);p05_frame*T05(1:3,1:3) T05(1:3,1:3)];
    
    %求矩阵T56(0)的伴随矩阵
    T56 = T(:,:,6);
    p56 = T56(1:3,4);
    p56_frame = [0 -p56(3) p56(2);p56(3) 0 -p56(1);-p56(2) p56(1) 0];
    AdT56 = [T56(1:3,1:3) zeros(3,3);p56_frame*T56(1:3,1:3) T56(1:3,1:3)];
    
    %求矩阵T01*eS1*T12*eS2*T23*eS3*T34*eS4*T45*eS5*T56*eS6的伴随矩阵
    T06 = T01*eS1*T12*eS2*T23*eS3*T34*eS4*T45*eS5*T56*eS6;
    p06 = T06(1:3,4);
    p06_frame = [0 -p06(3) p06(2);p06(3) 0 -p06(1);-p06(2) p06(1) 0];
    AdT06 = [T06(1:3,1:3) zeros(3,3);p06_frame*T06(1:3,1:3) T06(1:3,1:3)];
    
    %求矩阵T67(0)的伴随矩阵
    T67 = T(:,:,7);
    p67 = T67(1:3,4);
    p67_frame = [0 -p67(3) p67(2);p67(3) 0 -p67(1);-p67(2) p67(1) 0];
    AdT67 = [T67(1:3,1:3) zeros(3,3);p67_frame*T67(1:3,1:3) T67(1:3,1:3)];
    J = [AdT01 AdT01_s1*AdT12 AdT02*AdT23 AdT03*AdT34 AdT04*AdT45 AdT05*AdT56 AdT06*AdT67]   ;  %6*42
    
    %辨识方程
    x = pinv(J) * y;          %6*1
    %将误差反馈到初始矩阵上,标定出来的初始矩阵并不是反应机器人真实几何参数，而是一组使机器人精度提高的解
    %验证标定的正确性：最终机器人位姿的名义值和实际值的一致性是检验标定是否成功的唯一办法
    T(:,:,1) = T(:,:,1)*expm([0 -x(3) x(2) x(4);
                         x(3) 0 -x(1) x(5);
                         -x(2) x(1) 0 x(6);
                         0 0 0 0]); 
    T(:,:,2) = T(:,:,2)*expm([0 -x(9) x(8) x(10);
                        x(9) 0 -x(7) x(11);
                         -x(8) x(7) 0 x(12);
                         0 0 0 0]); 
    T(:,:,3) = T(:,:,3)*expm([0 -x(15) x(14) x(16);
                        x(15) 0 -x(13) x(17);
                        -x(14) x(13) 0 x(18);
                           0 0 0 0]); 
    T(:,:,4) = T(:,:,4)*expm([0 -x(21) x(20) x(22);
                         x(21) 0 -x(19) x(23);
                         -x(20) x(19) 0 x(24);
                             0 0 0 0]); 
    T(:,:,5) = T(:,:,5)*expm([0 -x(27) x(26) x(28);
                        x(27) 0 -x(25) x(29);
                        -x(26) x(25) 0 x(30);
                          0 0 0 0]); 
    T(:,:,6) = T(:,:,6)*expm([0 -x(33) x(32) x(34);
                        x(33) 0 -x(31) x(35);
                        -x(32) x(31) 0 x(36);
                        0 0 0 0]); 
    T(:,:,7) = T(:,:,6)*expm([0 -x(39) x(38) x(40);
                        x(39) 0 -x(37) x(41);
                        -x(38) x(37) 0 x(42);
                        0 0 0 0]); 
       
       
       
    end
end
end








